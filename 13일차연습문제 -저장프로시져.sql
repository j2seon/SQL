--13일차 연습문제

--1. 각 부서별로 최소 급여, 최대급여, 평균급여를 출력하는 저장 프로시져를 생성하시오.

CREATE OR REPLACE PROCEDURE SP_SALARYS
IS  
    CURSOR C1 IS
    SELECT DNO,MIN(SALARY),MAX(SALARY),AVG(SALARY) 
    FROM EMPLOYEE
    GROUP BY DNO ;
    
BEGIN 
    DBMS_OUTPUT.PUT_LINE('부서번호'||'  '||'최소급여'||'  '||'최대급여'||'  '||'평균');
    FOR C1_RE IN C1 LOOP
    DBMS_OUTPUT.PUT_LINE(C1_RE.DNO||'  '||C1_RE.MIN(SALARY)||'  '||C1_RE.MAX(SALARY)||'  '||C1_RE.AVG(SALARY));
    END LOOP;
END;
/
EXEC SP_SALARYS;

SELECT DNO,MIN(SALARY),MAX(SALARY),AVG(SALARY) 
    FROM EMPLOYEE
    GROUP BY DNO;
    
    
-- 2.사원번호 사원이름 부서명 부서위치를 출력하는 저장프로시져를 생성하시오.
CREATE OR REPLACE PROCEDURE SP_EM
IS  
    CURSOR C2 IS 
    SELECT E.ENO ,E.ENAME , D.DNAME,D.LOC
    FROM EMPLOYEE E ,DEPARTMENT D
    WHERE E.DNO=D.DNO;
BEGIN
   FOR C2_RE IN C2 LOOP
        DBMS_OUTPUT.PUT_LINE(C2_RE.ENO||'  '||C2_RE.ENAME||'  '||C2_RE.DNAME||'  '||C2_RE.LOC);
    END LOOP;
END;
/
EXEC SP_EM;

--3. 급여를 입력받아 입력받은 급여보다 높은사원의 사원이름,급여 직책을 출력하세요.
CREATE OR REPLACE PROCEDURE SP_SALARY_b(
    V_SALARY EMPLOYEE.SALARY%TYPE
)
IS
CURSOR C3 IS 
SELECT ENAME, JOB ,SALARY
FROM EMPLOYEE
WHERE SALARY>V_SALARY;
BEGIN
    FOR C3_RE IN C3 LOOP
        DBMS_OUTPUT.PUT_LINE(C3_RE.ENAME||'  '||C3_RE.JOB||'  '||C3_RE.SALARY);    
    END LOOP;
END;
/
EXEC SP_SALARY_B(1500);


--4.인풋매개변수 EMP_C10, DEPT_C10 두개를 입력받아 각각 EMPLOYEE,DEPARTMENT 테이블을 복사하는 저장츠로시저를 생성하세요


--5.DEPT_C10 테이블에서 DNO,DNAME,LOC 컬럼의 값을 인풋받아 인풋받은 값을 INSERT하는 저장프로시져를 생성하시오.
CREATE TABLE DEPT_C10
AS
SELECT * FROM DEPARTMENT;

CREATE OR REPLACE PROCEDURE SP_DEPTC10(
    V_DNO DEPT_C10.DNO%TYPE,
    V_DNAME DEPT_C10.DNAME%TYPE,
    V_LOC DEPT_C10.LOC%TYPE
)
IS 
BEGIN
    INSERT INTO DEPT_C10
    VALUES(V_DNO,V_DNAME,V_LOC);
END;
/

EXEC SP_DEPTC10(50,'HR','SEOUL');
SELECT * FROM DEPT_C10;
EXEC SP_DEPTC10(60,'HR2','BUSAN');

--6.EMP_C10 테이블에서 모든 컬럼의 값을 인풋받아 인풋받은 값을 INSERT하는 저장프로시져를 생성하시오.
CREATE TABLE EMP_C10 
AS
SELECT * FROM EMPLOYEE;
DESC EMPLOYEE;
CREATE OR REPLACE PROCEDURE SP_EMPC10(
    V_ENO SP_EMPC10.ENO%TYPE,
    V_ENAME SP_EMPC10.ENAME%TYPE,
    V_JOB SP_EMPC10.JOB%TYPE,
    V_MANAGER SP_EMPC10.MANAGER%TYPE,
    V_HIREDATE SP_EMPC10.HIREDATE%TYPE,
    V_SALARY SP_EMPC10.SALARY%TYPE,
    V_COMMISSION SP_EMPC10.COMMISSION%TYPE,
    V_DNO SP_EMPC10.DNO%TYPE
)
IS
BEGIN
    INSERT INTO EMP_C10
    VALUES(V_ENO,ENAME,JOB,MANAGER,HIREDATE,SALARY,COMMISSION,DNO);
END;
/

EXEC EMP_C10( 8000,'SONG','PROGRAMME',7788,sysdate,4500,1000,50);



DESC employee;
--10. 이름을 인풋 받아서 사원명, 급여, 부서번호, 부서명, 부서위치을 
-- OUT 파라미터에 넘겨주는 프로시저를 PL / SQL에서 호출

CREATE OR REPLACE PROCEDURE SEL_EMP(
    V_ENAME IN OUT VARCHAR2,
    V_SAL OUT NUMBER,
    V_DNO OUT NUMBER,
    V_DNAME OUT VARCHAR2,
    V_LOC OUT VARCHAR2
)
IS
BEGIN
    SELECT E.ENAME, E.SALARY, E.DNO, D.DNAME, D.LOC INTO V_ENAME,V_SAL,V_DNO,V_DNAME,V_LOC
    FROM EMPLOYEE E JOIN DEPARTMENT D
    ON E.DNO=D.DNO
    WHERE ENAME=V_ENAME;
END;
/

DECLARE
   VAR_ENAME VARCHAR2(50);
   VAR_SAL NUMBER;
   VAR_DNO NUMBER;
   VAR_DNAME VARCHAR2(14);
   VAR_LOC VARCHAR2(13);
BEGIN
    VAR_ENAME :='SCOTT';
    SEL_EMP(VAR_ENAME,VAR_SAL,VAR_DNO,VAR_DNAME,VAR_LOC);
     DBMS_OUTPUT.PUT_LINE('조회결과 : '||VAR_ENAME || '  '||VAR_SAL||'  '||VAR_DNO||
                            '  '||VAR_DNAME||'  '||VAR_LOC);
END;
/

--11. 부서번호를 받아서 사원명, 급여, 직책,부서명,부서위치를 OUT 파라미터에 넘겨주는 프로시저를 PL / SQL에서 호출
CREATE OR REPLACE PROCEDURE SEL_DEP(
    V_DNO IN OUT NUMBER,
    V_ENAME OUT VARCHAR2,
    V_SAL OUT NUMBER,
    V_JOB OUT VARCHAR2,
    V_DNAME OUT VARCHAR2,
    V_LOC OUT NUMBER
)
IS 
BEGIN
    SELECT E.ENAME, E.SALARY, E.JOB, D.DNAME,D.LOC INTO 
    FROM EMPLOYEE E JOIN DEPARTMENT D
    ON E.DNO = D.DNO
    WHERE E.DNO=V.DNO;
END;
/







